library(IDBac)
library(devtools::IDBac)
library(IDBacApp)
remotes::install_github("chasemc/IDBacApp@*release")
install(munsell, scales)
install.packages("munsell", "scales")
install.packages("munsell")
remotes::install_github("chasemc/IDBacApp@*release")
remotes::install_github("chasemc/IDBacApp@1.1.10")
install.packages("tibble")
remotes::install_github("chasemc/IDBacApp@1.1.10")
install.packages("sigmajs")
install.packages("htmlwidgets","sigmajs")
install.packages("htmlwidgets")
install.packages("sigmajs")
install.packages("shiny")
install.packages("sigmajs")
remotes::install_github("chasemc/IDBacApp@1.1.10")
install.packages("dendextend")
install.packages("ggplot2")
install.packages("scales")
install.packages("ggplot2")
install.packages("dendextend")
install.packages("viridis")
install.packages("viridisLite")
install.packages("viridis")
install.packages("gridExtra")
install.packages("viridis")
install.packages("dendextend")
remotes::install_github("chasemc/IDBacApp@1.1.10")
library(IDBacApp)
a = list(1,2,3)
a
a = c(1,2,3)
a
a = list(c(1,2,3), c(0,0,0))
a
a = list(list(1,2,3), list(0,0,0))
a
a = c(c(1,2,3), c(0,0,0))
a
a = list(list(list(1,2,3), list(0,0,0)))
a
mtcars
a <- IDBacApp::distMatrix(data = mtcars,
                                   method = x,
                                   booled = T)
a <- IDBacApp::distMatrix(data = mtcars, method = "cosine", booled = True)
a <- IDBacApp::distMatrix(data = mtcars, method = "cosine", booled = T)
a
mtcars[ , 1]
mtcars[ , 2]
mtcars
input <- lapply(input, 
          function(x) {
            MALDIquant::createMassSpectrum(
              mass = x[ , 1],
              intensity = x[ , 2])
          })
input <- mtcars
input <- lapply(input, 
          function(x) {
            MALDIquant::createMassSpectrum(
              mass = x[ , 1],
              intensity = x[ , 2])
          })
input <- mtcars
input <- MALDIquant::createMassSpectrum(
          mass = input[ , 1],
          intensity = input[ , 2])
        input 
input <- mtcars
input <- MALDIquant::createMassSpectrum(mass = input[ , 1], intensity = input[ , 2])
input <- list(input)
input
a <- IDBacApp::distMatrix(data = mtcars, method = "cosine", booled = True)
a <- IDBacApp::distMatrix(data = mtcars, method = "cosine", booled = T)
a
a <- IDBacApp::distMatrix(data = mtcars, method = "cosine", booled = T)
round(a, 4)
a
a
i <- mtcars
i <- lapply(i,
  function(x){
    MALDIquant::createMassSpectrum(mass = x[ , 1],
                                   intensity = x[ , 2])
  })
i
MALDIquant::createMassSpectrum(mass='1,1,1', intensity='2,2,2')
MALDIquant::createMassSpectrum(mass=[1,1,1], intensity=[2,2,2])
MALDIquant::createMassSpectrum(mass=list(1,1,1), intensity=list(2,2,2))
1:10
MALDIquant::createMassSpectrum(mass=1:10, intensity=1:10)
MALDIquant::intensityMatrix(MALDIquant::createMassSpectrum(mass=1:10, intensity=1:10))
a <- MALDIquant::createMassSpectrum(mass=1:10, intensity=1:10)
b <- MALDIquant::createMassSpectrum(mass=1:10, intensity=1:10)
c <- list(a, b)
c
nrows(c)
nrow(c)
nrow(mtcars)
ncol(mtcars)
p <- list(
  createMassPeaks(mass=seq(100, 500, 100), intensity=1:5),
  createMassPeaks(mass=c(seq(100.2, 300.2, 100), 395), intensity=1:4))
## only keep peaks which occur in all MassPeaks objects
binnedPeaks <- binPeaks(p, tolerance=0.002)
## compare result
iM1 <- intensityMatrix(p)
iM2 <- intensityMatrix(binnedPeaks)
all(dim(iM1) == c(2, 9)) # TRUE
all(dim(iM2) == c(2, 6)) # TRUE
show(iM2)
p <- list(
  MALDIquant::createMassPeaks(mass=seq(100, 500, 100), intensity=1:5),
  MALDIquant::createMassPeaks(mass=c(seq(100.2, 300.2, 100), 395), intensity=1:4))
## only keep peaks which occur in all MassPeaks objects
binnedPeaks <- MALDIquant::binPeaks(p, tolerance=0.002)
## compare result
iM1 <- MALDIquant::intensityMatrix(p)
iM2 <- MALDIquant::intensityMatrix(binnedPeaks)
all(dim(iM1) == c(2, 9)) # TRUE
all(dim(iM2) == c(2, 6)) # TRUE
show(iM2)
p <- list(
  MALDIquant::createMassPeaks(mass=seq(100, 500, 10), intensity=1:5),
  MALDIquant::createMassPeaks(mass=c(seq(100.2, 300.2, 100), 395), intensity=1:4))
## only keep peaks which occur in all MassPeaks objects
binnedPeaks <- MALDIquant::binPeaks(p, tolerance=0.002)
## compare result
iM1 <- MALDIquant::intensityMatrix(p)
iM2 <- MALDIquant::intensityMatrix(binnedPeaks)
all(dim(iM1) == c(2, 9)) # TRUE
all(dim(iM2) == c(2, 6)) # TRUE
show(iM2)
p <- list(
  MALDIquant::createMassPeaks(mass=seq(100, 500, 10), intensity=1:5),
  MALDIquant::createMassPeaks(mass=c(seq(100.2, 300.2, 100), 395), intensity=1:4))
## only keep peaks which occur in all MassPeaks objects
binnedPeaks <- MALDIquant::binPeaks(p, tolerance=0.002)
## compare result
iM1 <- MALDIquant::intensityMatrix(p)
iM2 <- MALDIquant::intensityMatrix(binnedPeaks)
all(dim(iM1) == c(2, 9)) # TRUE
all(dim(iM2) == c(2, 6)) # TRUE
show(iM2)
p <- list(
  MALDIquant::createMassPeaks(mass=seq(100, 500, 10), intensity=1:5),
  MALDIquant::createMassPeaks(mass=c(seq(100.2, 300.2, 10), 395), intensity=1:4))
## only keep peaks which occur in all MassPeaks objects
binnedPeaks <- MALDIquant::binPeaks(p, tolerance=0.002)
## compare result
iM1 <- MALDIquant::intensityMatrix(p)
iM2 <- MALDIquant::intensityMatrix(binnedPeaks)
all(dim(iM1) == c(2, 9)) # TRUE
all(dim(iM2) == c(2, 6)) # TRUE
show(iM2)
show(iM2)p <- list(
  MALDIquant::createMassPeaks(mass=seq(100, 500, 10), intensity=1:50),
  MALDIquant::createMassPeaks(mass=c(seq(100.2, 300.2, 100), 395), intensity=1:4))
## only keep peaks which occur in all MassPeaks objects
binnedPeaks <- MALDIquant::binPeaks(p, tolerance=0.002)
## compare result
iM1 <- MALDIquant::intensityMatrix(p)
iM2 <- MALDIquant::intensityMatrix(binnedPeaks)
all(dim(iM1) == c(2, 9)) # TRUE
all(dim(iM2) == c(2, 6)) # TRUE
show(iM2)
p <- list(
  MALDIquant::createMassPeaks(mass=seq(100, 500, 10), intensity=1:50),
  MALDIquant::createMassPeaks(mass=c(seq(100.2, 300.2, 100), 395), intensity=1:4))
## only keep peaks which occur in all MassPeaks objects
binnedPeaks <- MALDIquant::binPeaks(p, tolerance=0.002)
## compare result
iM1 <- MALDIquant::intensityMatrix(p)
iM2 <- MALDIquant::intensityMatrix(binnedPeaks)
all(dim(iM1) == c(2, 9)) # TRUE
all(dim(iM2) == c(2, 6)) # TRUE
show(iM2)
p <- list(
  MALDIquant::createMassPeaks(mass=seq(100, 500, 10), intensity=10:50),
  MALDIquant::createMassPeaks(mass=c(seq(100.2, 300.2, 100), 395), intensity=1:4))
## only keep peaks which occur in all MassPeaks objects
binnedPeaks <- MALDIquant::binPeaks(p, tolerance=0.002)
## compare result
iM1 <- MALDIquant::intensityMatrix(p)
iM2 <- MALDIquant::intensityMatrix(binnedPeaks)
all(dim(iM1) == c(2, 9)) # TRUE
all(dim(iM2) == c(2, 6)) # TRUE
show(iM2)
binnedPeaks <- NONE
binnedPeaks <- NA
binnedPeaks
binnedPeaks <- F
binnedPeaks
a <- 1:10
class(a)
a
lengths(a)
a <- list(1, 2, 3)
lengths(a)
length(a)
